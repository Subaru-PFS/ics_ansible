#!/usr/bin/env sh

usage()
{
    (
        echo "usage: $0: [-r root-directory]\n"
        echo "    -r root - create and use this root directory."
        echo "    --with-python=PATH - use this python executable for our system."
        echo
        echo "    If no root directory is specified, use $ICS_ROOT\n" 
    ) >&2
    exit 1
}

ICS_ROOT=$HOME/mhs
EUPS_BOOTSTRAP_VERSION=2.1.3

# New eups versions want to use /usr/bin/python, and insist that
# anything else is explicitly requested. Bypass that logic.
# EUPS_OPTIONS will be used in configuration script called from this. (KEEP!)
PYTHON_PATH=$(which python)
EUPS_OPTIONS="--with-python=$PYTHON_PATH"

while getopts :h-:r: arg; do
    case $arg in
        r) ICS_ROOT="$OPTARG"
            ;; 
        -) if test "with-python" = ${OPTARG:0:11}; then
               EUPS_OPTIONS="--$OPTARG"
               echo "EUPS_OPTIONS: $EUPS_OPTIONS"
           else
               echo "unknown -arg: $OPTARG"
               exit 2
           fi
           ;;
        ?) echo "unknown argument: $OPTARG"
           usage
           ;;
        h) usage
           ;;
    esac
done

echo "Using python environment based on $PYTHON_PATH...."
sleep 3

# Some sanity tests.
#  . make is required by eups, but not always supplied.
requiredPrograms="make"
for p in $requiredPrograms; do
    if ! type $p >/dev/null 2>&1; then 
        echo "FATAL: we need some version of $p"
        exit 2
    fi
done

# Configuration variables.
# 1. The root directory for image/data files, logs, etc. 
#    In practice, I'd make this the home directory for an operations/development account.
#    This script will create several subdirectories, which could then be moved around/linked/etc.
#
if test -d $ICS_ROOT; then 
    echo "ICS_ROOT=$ICS_ROOT exists ... NOT overwriting it. It contains:" >&2
    ls -l $ICS_ROOT >&2 
    exit 1
else
    echo "## Configureing EUPS environment into $ICS_ROOT...." >&2
fi

# 2. The root directory for development. The git repos will be cloned into this
#    By default, uses $ICS_ROOT/devel
ICS_DEVEL_ROOT=$ICS_ROOT/devel

# 3. The root directory for eups products. 
#    By default, uses $EUPS_PATH if already set, otherwise $ICS_ROOT/products 
export EUPS_PATH_TMP=${EUPS_PATH:-${ICS_ROOT}/products}

# 4. The EUPS version to fetch and install.
#    If eups is already installed, do not install a new one, and
#    only add our products if we were explicitely told to with -U
if type eups >/dev/null 2>&1; then
    echo "eups is already installed -- NOT overwriting it."
    exit 1
else
    if test -n "$EUPS_DIR"; then
        echo
        echo "I cannot find eups, but an EUPS_DIR=$EUPS_DIR is defined."
        echo "Not sure what is safe to do, so am stopping now."
        exit 1 
    fi
    EUPS_VERSION=${EUPS_BOOTSTRAP_VERSION:-"master"}
    EUPS_INSTALL_DIR=$EUPS_PATH_TMP/eups/$EUPS_VERSION
    EUPS_DEFAULT_DIR=$EUPS_PATH_TMP/eups/default

    if test -e "$EUPS_INSTALL_DIR" || test -e "$EUPS_DEFAULT_DIR"; then
        echo
        echo "Either $EUPS_INSTALL_DIR or $EUPS_DEFAULT_DIR exists."
        echo "Not sure what is safe to do, so am stopping now."
        exit 1
    fi
fi

export EUPS_PATH=$EUPS_PATH_TMP

#################################

mkdir -p $ICS_ROOT || (echo "could not create $ICS_ROOT directory!"; exit 1)
mkdir -p $ICS_DEVEL_ROOT
cd $ICS_DEVEL_ROOT

# Do we need to bootstrap a eups version?
if test -n "$EUPS_VERSION"; then 
    echo 
    echo "######## installing eups (version=$EUPS_VERSION) to $EUPS_INSTALL_DIR ...."
    git clone -b $EUPS_VERSION https://github.com/RobertLuptonTheGood/eups.git eups 

    (
        cd eups 
        ./configure --with-eups=$EUPS_PATH --prefix=$EUPS_INSTALL_DIR $EUPS_OPTIONS
        make install
    )
    if test $? -ne 0; then 
        echo "Failed to install eups."
        exit 1
    fi

    # Make convenience link, for logins, etc.
    ln -s $EUPS_VERSION $EUPS_DEFAULT_DIR

    # Act as if we are logging in.
    . $EUPS_DEFAULT_DIR/bin/setups.sh
else
    echo "$EUPS_VERSION already exists."
    echo "Stopping installation not to override it."
    exit 1
fi

. setups.sh

if test -n "$EUPS_VERSION"; then
    echo "###### You _must_ now source $EUPS_DEFAULT_PATH/eups/bin/setups.sh before anything else will work. That's:"
    echo
    echo ". $EUPS_DEFAULT_DIR/bin/setups.sh"
    echo   or
    echo "source $EUPS_DEFAULT_DIR/bin/setups.csh"
    echo   or
    echo ". $EUPS_DEFAULT_DIR/bin/setups.zsh"
    echo
    echo "You probably also want to put that into your login script. Use setups.zsh if you use a strict POSIX shell. "
    echo 
    echo "After setting up eups, 'eups list' will show all available products and versions, and "
    echo "'setup -v xxxx' will setup the given product and all its dependencies."
fi

exit 0

